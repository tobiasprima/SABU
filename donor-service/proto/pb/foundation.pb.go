// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.1
// source: foundation.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderID) Reset() {
	*x = OrderID{}
	mi := &file_foundation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderID) ProtoMessage() {}

func (x *OrderID) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderID.ProtoReflect.Descriptor instead.
func (*OrderID) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{0}
}

func (x *OrderID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetOrderByIDResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderListId     string                 `protobuf:"bytes,2,opt,name=order_list_id,json=orderListId,proto3" json:"order_list_id,omitempty"`
	MealsId         string                 `protobuf:"bytes,3,opt,name=meals_id,json=mealsId,proto3" json:"meals_id,omitempty"`
	Quantity        uint32                 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	DesiredQuantity uint32                 `protobuf:"varint,5,opt,name=desired_quantity,json=desiredQuantity,proto3" json:"desired_quantity,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOrderByIDResponse) Reset() {
	*x = GetOrderByIDResponse{}
	mi := &file_foundation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIDResponse) ProtoMessage() {}

func (x *GetOrderByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIDResponse.ProtoReflect.Descriptor instead.
func (*GetOrderByIDResponse) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrderByIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOrderByIDResponse) GetOrderListId() string {
	if x != nil {
		return x.OrderListId
	}
	return ""
}

func (x *GetOrderByIDResponse) GetMealsId() string {
	if x != nil {
		return x.MealsId
	}
	return ""
}

func (x *GetOrderByIDResponse) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetOrderByIDResponse) GetDesiredQuantity() uint32 {
	if x != nil {
		return x.DesiredQuantity
	}
	return 0
}

type PrepareAddOrderQuantityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DonationId    string                 `protobuf:"bytes,1,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Quantity      uint32                 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareAddOrderQuantityRequest) Reset() {
	*x = PrepareAddOrderQuantityRequest{}
	mi := &file_foundation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareAddOrderQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareAddOrderQuantityRequest) ProtoMessage() {}

func (x *PrepareAddOrderQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareAddOrderQuantityRequest.ProtoReflect.Descriptor instead.
func (*PrepareAddOrderQuantityRequest) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{2}
}

func (x *PrepareAddOrderQuantityRequest) GetDonationId() string {
	if x != nil {
		return x.DonationId
	}
	return ""
}

func (x *PrepareAddOrderQuantityRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PrepareAddOrderQuantityRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type PrepareAddOrderQuantityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareAddOrderQuantityResponse) Reset() {
	*x = PrepareAddOrderQuantityResponse{}
	mi := &file_foundation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareAddOrderQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareAddOrderQuantityResponse) ProtoMessage() {}

func (x *PrepareAddOrderQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareAddOrderQuantityResponse.ProtoReflect.Descriptor instead.
func (*PrepareAddOrderQuantityResponse) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{3}
}

func (x *PrepareAddOrderQuantityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PrepareAddOrderQuantityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommitAddOrderQuantityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DonationId    string                 `protobuf:"bytes,1,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitAddOrderQuantityRequest) Reset() {
	*x = CommitAddOrderQuantityRequest{}
	mi := &file_foundation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitAddOrderQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitAddOrderQuantityRequest) ProtoMessage() {}

func (x *CommitAddOrderQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitAddOrderQuantityRequest.ProtoReflect.Descriptor instead.
func (*CommitAddOrderQuantityRequest) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{4}
}

func (x *CommitAddOrderQuantityRequest) GetDonationId() string {
	if x != nil {
		return x.DonationId
	}
	return ""
}

type CommitAddOrderQuantityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitAddOrderQuantityResponse) Reset() {
	*x = CommitAddOrderQuantityResponse{}
	mi := &file_foundation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitAddOrderQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitAddOrderQuantityResponse) ProtoMessage() {}

func (x *CommitAddOrderQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitAddOrderQuantityResponse.ProtoReflect.Descriptor instead.
func (*CommitAddOrderQuantityResponse) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{5}
}

func (x *CommitAddOrderQuantityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommitAddOrderQuantityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RollbackAddOrderQuantityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DonationId    string                 `protobuf:"bytes,1,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackAddOrderQuantityRequest) Reset() {
	*x = RollbackAddOrderQuantityRequest{}
	mi := &file_foundation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackAddOrderQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackAddOrderQuantityRequest) ProtoMessage() {}

func (x *RollbackAddOrderQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackAddOrderQuantityRequest.ProtoReflect.Descriptor instead.
func (*RollbackAddOrderQuantityRequest) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{6}
}

func (x *RollbackAddOrderQuantityRequest) GetDonationId() string {
	if x != nil {
		return x.DonationId
	}
	return ""
}

type RollbackAddOrderQuantityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackAddOrderQuantityResponse) Reset() {
	*x = RollbackAddOrderQuantityResponse{}
	mi := &file_foundation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackAddOrderQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackAddOrderQuantityResponse) ProtoMessage() {}

func (x *RollbackAddOrderQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foundation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackAddOrderQuantityResponse.ProtoReflect.Descriptor instead.
func (*RollbackAddOrderQuantityResponse) Descriptor() ([]byte, []int) {
	return file_foundation_proto_rawDescGZIP(), []int{7}
}

func (x *RollbackAddOrderQuantityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RollbackAddOrderQuantityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_foundation_proto protoreflect.FileDescriptor

var file_foundation_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x61, 0x6c, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x6c, 0x73, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x78, 0x0a, 0x1e, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x55, 0x0a, 0x1f, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x40, 0x0a, 0x1d, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x42, 0x0a, 0x1f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x20, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xb6, 0x03,
	0x0a, 0x11, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x13, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x20, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x17, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x75, 0x0a, 0x18, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x2e, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_foundation_proto_rawDescOnce sync.Once
	file_foundation_proto_rawDescData = file_foundation_proto_rawDesc
)

func file_foundation_proto_rawDescGZIP() []byte {
	file_foundation_proto_rawDescOnce.Do(func() {
		file_foundation_proto_rawDescData = protoimpl.X.CompressGZIP(file_foundation_proto_rawDescData)
	})
	return file_foundation_proto_rawDescData
}

var file_foundation_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_foundation_proto_goTypes = []any{
	(*OrderID)(nil),                          // 0: foundation.OrderID
	(*GetOrderByIDResponse)(nil),             // 1: foundation.GetOrderByIDResponse
	(*PrepareAddOrderQuantityRequest)(nil),   // 2: foundation.PrepareAddOrderQuantityRequest
	(*PrepareAddOrderQuantityResponse)(nil),  // 3: foundation.PrepareAddOrderQuantityResponse
	(*CommitAddOrderQuantityRequest)(nil),    // 4: foundation.CommitAddOrderQuantityRequest
	(*CommitAddOrderQuantityResponse)(nil),   // 5: foundation.CommitAddOrderQuantityResponse
	(*RollbackAddOrderQuantityRequest)(nil),  // 6: foundation.RollbackAddOrderQuantityRequest
	(*RollbackAddOrderQuantityResponse)(nil), // 7: foundation.RollbackAddOrderQuantityResponse
}
var file_foundation_proto_depIdxs = []int32{
	0, // 0: foundation.FoundationService.GetOrderByID:input_type -> foundation.OrderID
	2, // 1: foundation.FoundationService.PrepareAddOrderQuantity:input_type -> foundation.PrepareAddOrderQuantityRequest
	4, // 2: foundation.FoundationService.CommitAddOrderQuantity:input_type -> foundation.CommitAddOrderQuantityRequest
	6, // 3: foundation.FoundationService.RollbackAddOrderQuantity:input_type -> foundation.RollbackAddOrderQuantityRequest
	1, // 4: foundation.FoundationService.GetOrderByID:output_type -> foundation.GetOrderByIDResponse
	3, // 5: foundation.FoundationService.PrepareAddOrderQuantity:output_type -> foundation.PrepareAddOrderQuantityResponse
	5, // 6: foundation.FoundationService.CommitAddOrderQuantity:output_type -> foundation.CommitAddOrderQuantityResponse
	7, // 7: foundation.FoundationService.RollbackAddOrderQuantity:output_type -> foundation.RollbackAddOrderQuantityResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_foundation_proto_init() }
func file_foundation_proto_init() {
	if File_foundation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foundation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_foundation_proto_goTypes,
		DependencyIndexes: file_foundation_proto_depIdxs,
		MessageInfos:      file_foundation_proto_msgTypes,
	}.Build()
	File_foundation_proto = out.File
	file_foundation_proto_rawDesc = nil
	file_foundation_proto_goTypes = nil
	file_foundation_proto_depIdxs = nil
}
